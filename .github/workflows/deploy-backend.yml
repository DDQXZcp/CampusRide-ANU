name: Build and Deploy Backend (Maven â†’ EC2)

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: {}

permissions:
  contents: read

env:
  EC2_HOST: 52.63.53.185
  EC2_USER: ec2-user
  EC2_SSH_KEY_SECRET: EC2_SSH_KEY
  JAR_NAME: campusride-backend-1.0.0.jar # Defined in pom.xml
  REMOTE_DIR: /home/ec2-user/app
  SERVICE_NAME: backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Build with Maven
      working-directory: apps/backend
      run: mvn clean package -DskipTests

    - name: Find built JAR file
      id: find-jar
      run: |
        JAR_FILE=$(find apps/backend/target -maxdepth 1 -name '*.jar' ! -name '*-sources.jar' ! -name '*-javadoc.jar' | head -n 1)
        if [ -z "$JAR_FILE" ]; then
          echo "No JAR file found in target directory!"
          exit 1
        fi
        echo "jar=$JAR_FILE" >> $GITHUB_OUTPUT

    - name: Prepare SSH key
      id: ssh-key
      run: |
        echo "${{ secrets[env.EC2_SSH_KEY_SECRET] }}" > key.pem
        chmod 600 key.pem

    - name: Copy JAR to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i key.pem "${{ steps.find-jar.outputs.jar }}" ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:${{ env.REMOTE_DIR }}/

    # For better security, now only scp the certificate directly from my device

    # Use shell variable expansion outside EOF to avoid issues with GitHub Actions
    - name: Restart backend service on EC2 with env vars
      run: |
        MQTT_USERNAME="${{ secrets.MQTT_USERNAME }}"
        MQTT_PASSWORD="${{ secrets.MQTT_PASSWORD }}"
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << EOF
          sudo pkill -f "${{ env.JAR_NAME }}" || true
          cd ${{ env.REMOTE_DIR }}
          nohup bash -c 'export MQTT_USERNAME="$MQTT_USERNAME" MQTT_PASSWORD="$MQTT_PASSWORD"; java -jar ${{ env.JAR_NAME }}' > /home/ec2-user/backend.log 2>&1 &
        EOF

