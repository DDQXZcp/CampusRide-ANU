name: Deploy Backend (Lambda container + CFN)

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/backend/GraduationPlannerApi/**'
      - 'infrastructure/infrastructure.yaml'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: {}

permissions:
  id-token: write   # OIDC
  contents: read

env:
  AWS_REGION: ap-southeast-2
  ECR_REPO: gradtrack-backend-lambda               # ECR repo name (auto-created if missing)
  CFN_STACK: Herman-GradTrack                      # <— your existing stack name
  CFN_TEMPLATE: infrastructure/infrastructure.yaml               # <— path to the merged template in repo
  ALLOWED_ORIGIN: https://gradtrack.herman-tang.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: backend-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::334643191233:role/GitHubActions-GradTrackDeploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPO" >/dev/null

      - name: Build & push Lambda container (from subfolder)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./apps/backend/GraduationPlannerApi
          file: ./apps/backend/GraduationPlannerApi/Dockerfile
          push: true
          # tag with commit SHA; we'll resolve the immutable digest next
          tags: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
          provenance: false

      - name: Resolve immutable image digest
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images --repository-name "$ECR_REPO" \
            --image-ids imageTag=${GITHUB_SHA} \
            --query 'imageDetails[0].imageDigest' --output text)
          echo "image_uri=${{ steps.ecr.outputs.registry }}/${ECR_REPO}@${DIGEST}" >> $GITHUB_OUTPUT

      - name: Deploy/Update CloudFormation stack
        run: |
          aws cloudformation deploy \
            --stack-name "$CFN_STACK" \
            --template-file "$CFN_TEMPLATE" \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ImageUri="${{ steps.digest.outputs.image_uri }}" \
              AllowedOrigin="${ALLOWED_ORIGIN}"

      - name: Show API URL
        run: |
          API=$(aws cloudformation describe-stacks --stack-name "$CFN_STACK" \
            --query "Stacks[0].Outputs[?OutputKey=='ApiBaseUrl'].OutputValue" --output text)
          echo "API Base URL: $API"
